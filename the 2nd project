import random

# ASCII Art for Hangman stages
HANGMAN_ART = [
    """
    +---+
    |   |
        |
        |
        |
        |
    =========""",
    """
    +---+
    |   |
    O   |
        |
        |
        |
    =========""",
    """
    +---+
    |   |
    O   |
    |   |
        |
        |
    =========""",
    """
    +---+
    |   |
    O   |
   /|   |
        |
        |
    =========""",
    """
    +---+
    |   |
    O   |
   /|\\  |
        |
        |
    =========""",
    """
    +---+
    |   |
    O   |
   /|\\  |
   /    |
        |
    =========""",
    """
    +---+
    |   |
    O   |
   /|\\  |
   / \\  |
        |
    ========="""
]

def load_words(filename="words.txt"):
    """Load words from a file (one word per line)."""
    try:
        with open(filename, "r") as file:
            return [word.strip().lower() for word in file.readlines()]
    except FileNotFoundError:
        print(f"Error: '{filename}' not found. Using default words.")
        return ["python", "hangman", "programming", "computer", "keyboard", "gaming", "challenge"]

def choose_difficulty():
    """Let the player choose difficulty (affects word length & attempts)."""
    print("\nChoose difficulty:")
    print("1 - Easy (short words, 8 attempts)")
    print("2 - Medium (medium words, 6 attempts)")
    print("3 - Hard (long words, 4 attempts)")
    
    while True:
        choice = input("Enter 1, 2, or 3: ")
        if choice in ["1", "2", "3"]:
            if choice == "1":
                return (4, 6, 8)  # Max word length, min length, attempts
            elif choice == "2":
                return (7, 5, 6)
            else:
                return (12, 8, 4)
        print("Invalid choice. Try again.")

def hangman():
    words = load_words()
    max_len, min_len, attempts = choose_difficulty()
    
    # Filter words by chosen difficulty
    valid_words = [word for word in words if min_len <= len(word) <= max_len]
    if not valid_words:
        print("No words match the selected difficulty. Using defaults.")
        valid_words = ["python", "hangman", "programming"]
    
    secret_word = random.choice(valid_words)
    guessed_letters = set()
    wrong_guesses = 0
    score = 0
    
    print("\nWelcome to Advanced Hangman!")
    print(f"Guess the word (Length: {len(secret_word)} | Attempts left: {attempts})")
    
    while wrong_guesses < attempts:
        # Display current state
        print(HANGMAN_ART[wrong_guesses])
        display_word = " ".join([letter if letter in guessed_letters else "_" for letter in secret_word])
        print(f"\nWord: {display_word}")
        print(f"Guessed letters: {', '.join(sorted(guessed_letters))}")
        
        # Check for win
        if "_" not in display_word:
            score = attempts - wrong_guesses
            print(f"\nCongratulations! You won! Score: {score}")
            return
        
        # Get player's guess
        guess = input("\nGuess a letter: ").lower()
        
        # Validate input
        if len(guess) != 1 or not guess.isalpha():
            print("Please enter a single letter.")
            continue
        if guess in guessed_letters:
            print("You already guessed that letter!")
            continue
        
        guessed_letters.add(guess)
        
        # Check if guess is correct
        if guess not in secret_word:
            wrong_guesses += 1
            print(f"Wrong! Attempts left: {attempts - wrong_guesses}")
    
    # Game over
    print(HANGMAN_ART[wrong_guesses])
    print(f"\nGame Over! The word was: {secret_word}")
    print(f"Your score: {score}")

if __name__ == "__main__":
    hangman()